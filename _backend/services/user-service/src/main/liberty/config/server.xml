<?xml version="1.0" encoding="UTF-8"?>
<server description="User Server">

    <!-- Enable features -->
    <featureManager>
        <feature>jakartaee-10.0</feature>
        <feature>microProfile-6.0</feature>
        <feature>mpJwt-2.1</feature>
        <feature>appSecurity-5.0</feature>
    </featureManager>

    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->

    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
        encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
        Then uncomment the keyStore element. -->
    
    <!-- <keyStore 
        id="defaultKeyStore" 
        keyAlias="defaultKeyStore" 
        location="${server.output.dir}/resources/security/defaultKeyStore.jks" 
        password="abcdefg"/>  -->
   

    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password,
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element.
        Then uncomment the user element. -->


    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint id="defaultHttpEndpoint"
                  host="*"
                  httpPort="9081"
                  httpsPort="9443" />

    <!-- <keyStore id="defaultKeyStore"
              location="defaultKeyStore.jks"
              password="quotablepw"/> -->

    <variable name="JWT_SECRET" value="secret" />

    <jwtBuilder
            id="defaultJwtBuilder"
            issuer="quotable"
            expiry="24h"
            signatureAlgorithm="HS256"
            sharedKey="${JWT_SECRET}"
            />

    <jwtConsumer 
            id="defaultJwtConsumer"
            issuer="quotable"
            signatureAlgorithm="HS256"
            sharedKey="${JWT_SECRET}"
            />

    <mpJwt id="mpJwtConfig"
           issuer="quotable"
           cookieName="jwt"
           tokenHeader="Cookie"
           signatureAlgorithm="HS256"
           sharedKey="${JWT_SECRET}"
           />

    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>

    <!-- System variables -->
    <variable name="CONNECTION_STRING" value="${env.CONNECTION_STRING}"/>
    <variable name="ORIGIN" value="http://localhost:9080"/> <!-- this will be updated to a variable from .env -->

    <!-- Configures the application on a specified context root -->
    <webApplication contextRoot="/" location="user-service.war">
        <appProperties>
            <property name="CONNECTION_STRING" value="${CONNECTION_STRING}"/>
            <property name="ORIGIN" value="${ORIGIN}"></property>
        </appProperties>
        <application-bnd>
            <security-role name="admin">
                <group name="admin"/>
            </security-role>
            <security-role name="user">
                <group name="user"/>
            </security-role>
        </application-bnd>
    </webApplication>

    <!-- CORs configuration -->
    <cors domain="/users/*"
        allowedOrigins="${ORIGIN}"
        allowedMethods="GET, POST, PUT, DELETE, OPTIONS"
        allowedHeaders="Content-Type, Authorization, Accept"
        allowCredentials="true"/>
    <cors domain="/users/accounts/create"
        allowedOrigins="${ORIGIN}"
        allowedMethods="GET, POST, PUT, DELETE, OPTIONS"
        allowedHeaders="Content-Type, Authorization, Accept"
        allowCredentials="true"/>
    <cors domain="/users/accounts/search"
        allowedOrigins="${ORIGIN}"
        allowedMethods="GET, POST, PUT, DELETE, OPTIONS"
        allowedHeaders="Content-Type, Authorization, Accept"
        allowCredentials="true"/>
    <cors domain="/users/accounts/update"
        allowedOrigins="${ORIGIN}"
        allowedMethods="GET, POST, PUT, DELETE, OPTIONS"
        allowedHeaders="Content-Type, Authorization, Accept"
        allowCredentials="true"/>
    <cors domain="/users/accounts/delete"
        allowedOrigins="${ORIGIN}"
        allowedMethods="GET, POST, PUT, DELETE, OPTIONS"
        allowedHeaders="Content-Type, Authorization, Accept"
        allowCredentials="true"/>
    <cors domain="/users/accounts/admin"
        allowedOrigins="${ORIGIN}"
        allowedMethods="GET, POST, PUT, DELETE, OPTIONS"
        allowedHeaders="Content-Type, Authorization, Accept"
        allowCredentials="true"/>
    <cors domain="/users/accounts/whoami"
        allowedOrigins="${ORIGIN}"
        allowedMethods="GET, POST, PUT, DELETE, OPTIONS"
        allowedHeaders="Content-Type, Authorization, Accept"
        allowCredentials="true"/>
    
    <cors domain="/users/auth/login"
        allowedOrigins="${ORIGIN}"
        allowedMethods="GET, POST, PUT, DELETE, OPTIONS"
        allowedHeaders="Content-Type, Authorization, Accept"
        allowCredentials="true"/>
    <cors domain="/users/auth/callback"
        allowedOrigins="${ORIGIN}"
        allowedMethods="GET, POST, PUT, DELETE, OPTIONS"
        allowedHeaders="Content-Type, Authorization, Accept"
        allowCredentials="true"/>
    <cors domain="/users/auth/jwt"
        allowedOrigins="${ORIGIN}"
        allowedMethods="GET, POST, PUT, DELETE, OPTIONS"
        allowedHeaders="Content-Type, Authorization, Accept"
        allowCredentials="true"/>


        <!-- Enable static content serving -->
    <httpDispatcher enableWelcomePage="true"/>

    <!-- Default SSL configuration enables trust for default certificates from the Java runtime -->
    <ssl id="defaultSSLConfig" trustDefaultCerts="true" />
</server>
