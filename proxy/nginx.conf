events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name localhost;

        client_max_body_size 20M;

        set $allowed_origin "";

        if ($http_origin ~* "^http://localhost:(9080|9081|9082|9083)$") {
            set $allowed_origin $http_origin;
        }

        location /users/ {
            proxy_pass http://user-service:9081;
            proxy_http_version 1.1;

            proxy_set_header Origin "";
            proxy_set_header Host $host;
            proxy_set_header Cookie $http_cookie;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Manually set CORS headers
            add_header 'Access-Control-Allow-Origin' "$allowed_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Preflight request handling
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        location /quotes/ {
            proxy_pass http://quotes-service:9082;
            proxy_http_version 1.1;

            proxy_set_header Origin "";
            proxy_set_header Host $host;
            proxy_set_header Cookie $http_cookie;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Manually set CORS headers
            add_header 'Access-Control-Allow-Origin' "$allowed_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Preflight request handling
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        location / {
            proxy_pass http://frontend/;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;

            add_header 'Access-Control-Allow-Origin' "$allowed_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            proxy_set_header Cookie $http_cookie;

            if ($request_method = OPTIONS) {
                return 204;
            }
        }
    }
}
